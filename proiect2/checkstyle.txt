Starting audit...
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:13:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:17:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:21:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:21:29: Parameter strategy should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:25:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:25:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:29:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:33:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:33:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:37:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:41:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:41:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:45:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:49:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'setChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:49:36: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:53:5: Class 'AnnualChanges' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChanges' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:55:33: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:56:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:57:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:58:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\AnnualChanges.java:59:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:5:8: Unused import - enums.Cities. [UnusedImports]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:28:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:32:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:32:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:36:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:40:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:40:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:44:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:48:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:48:29: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:52:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:56:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:56:30: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:60:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:64:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:64:25: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:68:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:72:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:73:24: Parameter elf should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:76:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:80:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScoreBonus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScoreBonus' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:81:35: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:86:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:90:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:90:24: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:94:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:98:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:98:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:101:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:105:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:106:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:110:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:114:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:114:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:118:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:122:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:122:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:126:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:130:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:130:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138: Line is longer than 100 characters (found 279). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:18: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:30: Parameter lastName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:47: Parameter firstName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:65: Parameter city should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:78: Parameter age should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:91: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:122: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:143: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:161: Parameter elf should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:173: Parameter niceScoreBonus should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:196: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:227: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:138:250: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:154:18: Parameter other should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:179:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:181:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:182:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:183:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:184:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:185:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:186:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:187:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:188:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:189:55: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:190:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:191:55: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Child.java:192:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:9:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:13:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:13:29: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:16:22: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:16:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:16:23: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:17:5: Class 'Children' looks like designed for extension (can be subclassed), but the method 'addToList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Children' final or making the method 'addToList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:17:27: Parameter other should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Children.java:23:21: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:12:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:16:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:16:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:20:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:24:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setElf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setElf' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:24:24: Parameter elf should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:28:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:32:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:32:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:36:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:40:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:40:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:44:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:46:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:47:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:48:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\ChildUpdate.java:49:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:4:8: Unused import - java.util.List. [UnusedImports]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:12:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getCityName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getCityName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:16:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getCityAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getCityAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:20:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'setCityAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'setCityAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:20:37: Parameter cityAverageScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:24:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'setCityName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'setCityName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:24:29: Parameter cityName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:28:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getCityScoreSum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getCityScoreSum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:32:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'setCityScoreSum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'setCityScoreSum' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:32:33: Parameter cityScoreSum should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:36:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'getNumberOfPeople' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'getNumberOfPeople' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:40:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'setNumberOfPeople' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'setNumberOfPeople' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:40:35: Parameter numberOfPeople should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:47:17: Parameter cityName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:47:34: Parameter cityScoreSum should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:47:55: Parameter numberOfPeople should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:53:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:54:26: Parameter o should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:65:5: Class 'City' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'City' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:67:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:68:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:69:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:70:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\City.java:71:58: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:13:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:17:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:17:29: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:21:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:25:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:25:35: Parameter santaGiftsList should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:29:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getListaOrase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getListaOrase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:33:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setListaOrase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setListaOrase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:33:31: Parameter listaOrase should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:37:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:39:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:40:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:41:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\InitialData.java:42:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:12:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:16:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:16:34: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:20:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:24:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:24:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:28:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:32:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:32:32: Parameter initialData should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:40:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:40:34: Parameter annualChanges should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:44:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:46:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:47:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:48:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:49:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Input.java:50:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:8:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:23:5: Method length is 241 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:39:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:39:29: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:49:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:55: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:60:33: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:66:37: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:85:17: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:89:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:89:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:89:41: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:89:57: '999' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:90:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:90:42: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:91:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:95:46: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:96:51: '10.0' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:98:54: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:98:76: '12' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:102: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:103:25: '}' at column 25 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:105:52: '12' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:105:76: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:107: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:116: Line is longer than 100 characters (found 135). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:116:131: '100' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:117:29: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:117:59: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:117:85: '10.0' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:119: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:129:25: '}' at column 25 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:133: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:134: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:141:17: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:156:17: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:157:43: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:158: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:159:25: switch without "default" clause. [MissingSwitchDefault]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:163: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:163:113: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:163:118: '100' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:166: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:166:113: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:166:118: '100' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:171: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:172:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:173:25: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:180:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:182: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:183:25: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:184:29: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:190:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:191:21: 'else' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:191:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:192:25: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:199:43: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:202: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:204: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:204:37: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:204:37: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:210:41: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:211:45: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:211:96: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:217: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:219: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:229:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:229:38: '<=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:229:41: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:256: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:265: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:265:39: Parameter spent should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:265:53: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:265:66: Parameter listaCadouri should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:265:94: Parameter child should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:267:31: '18' is a magic number. [MagicNumber]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:272: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:272:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:272:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:278:25: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:279:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:279:80: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Main.java:286: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:9:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getAnnualChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getAnnualChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:13:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'setAnnualChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'setAnnualChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:13:35: Parameter annualChildren should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:16:20: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:16:20: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:16:21: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Output.java:17:19: Parameter annualChildren should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:13:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:16:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'getQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'getQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:20:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'setQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'setQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:21:29: Parameter quantity should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:25:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:25:32: Parameter productName should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:29:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:33:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:33:26: Parameter price should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:37:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:41:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:41:29: Parameter category should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:44:22: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:44:23: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:46:20: Parameter other should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:53:5: Class 'Present' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Present' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:55:27: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:56:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:57:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Present.java:58:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:3:47: '>' is followed by an illegal character. [GenericWhitespace]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:3:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:7:5: Class 'Score' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Score' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:11:5: Class 'Score' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Score' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:11:23: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:15:5: Class 'Score' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Score' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:19:5: Class 'Score' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Score' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:19:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:23:18: Parameter id should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:23:30: Parameter averageScore should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:31:5: Class 'Score' looks like designed for extension (can be subclassed), but the method 'compareTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Score' final or making the method 'compareTo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:32:26: Parameter o should be final. [FinalParameters]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:43:5: Class 'Score' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Score' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:46:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:47:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\fakes\Desktop\proiect2\.\src\main\Score.java:48:50: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 299 errors.
